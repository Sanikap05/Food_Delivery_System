/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Role.CustomerRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sanik
 */
public class ManageAllCustomersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageAllCustomersJPanel
     */
    JPanel userProcessContainer;
    EcoSystem system;
    CustomerDirectory customerDirectory;
    public ManageAllCustomersJPanel(JPanel userProcessContainer, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.populateTable();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        usernameTextField = new javax.swing.JTextField();
        submitJButton = new javax.swing.JButton();
        passwordTextField = new javax.swing.JPasswordField();
        nameTextField = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnedit = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Username", "Customer name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customerTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 76, 384, 95));

        jLabel1.setText("Username");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 245, -1, -1));

        jLabel3.setText("Password ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 271, -1, -1));

        jLabel2.setText("Customer Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(75, 222, -1, -1));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(38, 312, -1, -1));
        add(usernameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 242, 136, -1));

        submitJButton.setText("Submit");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 312, -1, -1));

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });
        add(passwordTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 268, 136, -1));
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 216, 138, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, -1, -1));

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 180, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Customer Login Details");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        btnedit.setText("View");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        add(btnedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed

        String name = nameTextField.getText();
        String username = usernameTextField.getText();
        String password = String.valueOf(passwordTextField.getPassword());
        
        if(system.checkIfUserIsUnique(username))
        {
            Customer customer = system.getCustomerDirectory().createCustomer(name,username);
            UserAccount ua = system.getUserAccountDirectory().createUserAccount(username, password, new CustomerRole());
            ua.setCustomer(customer);
            system.getUserCust().put(ua,customer);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Username has already been taken. Please enter another username.");
        }
        
        populateTable();
        nameTextField.setText("");
        usernameTextField.setText("");
        passwordTextField.setText("");
    }//GEN-LAST:event_submitJButtonActionPerformed
    
    public void populateTable() {
       DefaultTableModel dtm = (DefaultTableModel) customerTable.getModel();
        dtm.setRowCount(0);
        for (Customer customer : system.getCustomerDirectory().getCustomerList()) {
            Object row[] = new Object[2];
            row[0] = customer.getCustomerUsername();
            row[1] = customer;
            dtm.addRow(row);
        }
//    if(system.getUserCust() != null){
//    Iterator userCustIterator = system.getUserCust().entrySet().iterator(); 
//  
//        // Iterate through the hashmap 
//        // and add some bonus marks for every student 
//  
//  
//        while (userCustIterator.hasNext()) { 
//            Map.Entry mapElement = (Map.Entry)userCustIterator.next(); 
//            Customer cust = ((Customer)mapElement.getValue()); 
//            UserAccount ua  =((UserAccount)mapElement.getKey()); 
//            Object row[] = new Object[2];
//            row[0] = ua.getUsername();
//            row[1] = cust.getName();
//            dtm.addRow(row);
//        } 
//}
    }
    
  
     
    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        UserAccount u = null;
        Employee e = null;
        int selectedRow = customerTable.getSelectedRow();
        if(selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
            Customer c = (Customer) customerTable.getValueAt(selectedRow, 1);
            String customerUsername = customerTable.getValueAt(selectedRow, 0).toString();
           
            if(system.getCustomerDirectory().getCustomerList().contains(c))
            {
                for(UserAccount userAccount: system.getUserAccountDirectory().getUserAccountList())
                {
                    if(userAccount.getUsername().equals(customerUsername))
                    {
                        u = userAccount;
                    }
                }
                for(Employee emp: system.getEmployeeDirectory().getEmployeeList())
                {
                    if(emp.getName().equals(c.getName()))
                    {
                        e = emp;
                    }
                }

            }
            system.getCustomerDirectory().deleteCustomer(c);
            system.getUserAccountDirectory().deleteUserAccount(u);
            system.getEmployeeDirectory().deleteEmployee(e);
            populateTable();
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Please select a customer to delete.");
        }

//        UserAccount u = null;
//        int selectedRow = customerTable.getSelectedRow();
//        if(selectedRow >= 0) {
//            Customer c = (Customer) customerTable.getValueAt(selectedRow, 0);
//            if(system.getCustomerDirectory().getCustomerList().contains(c))
//            {
//                for(UserAccount userAccount: system.getUserAccountDirectory().getUserAccountList())
//                {
//                    if(userAccount.getUsername().equals(c.getUsername()))
//                    {
//                        u = userAccount;
//                    }
//                }
//
//            }
//            system.getCustomerDirectory().deleteCustomer(c);
//            system.getUserAccountDirectory().deleteUserAccount(u);
//            populateTable();
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(null, "Please select a customer to delete.");
//        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        UserAccount u = null;
        String password = String.valueOf(passwordTextField.getPassword());
        int selectedRow = customerTable.getSelectedRow();
         
       
        if(selectedRow >= 0) {
            DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
            Customer r = (Customer) customerTable.getValueAt(selectedRow, 1);
            //UpdateInformationJPanel updateUserInfo = new UpdateInformationJPanel(userProcessContainer, this.system, "Customer", r.getName());
            String customerUsername = customerTable.getValueAt(selectedRow, 0).toString();
            //System.out.println(r.getName()
            //;
            if(system.getCustomerDirectory().getCustomerList().contains(r))
            {
                r.setName(nameTextField.getText());
                r.setCustomerUsername(usernameTextField.getText());
               
            }
            for(UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getUsername().equals(customerUsername))
                {
                    UserAccount userAccount = ua;
                    ua.setPassword(password);
                }
            }
            nameTextField.setText("");
            usernameTextField.setText("");
            passwordTextField.setText("");
            populateTable();
//            userProcessContainer.add("updateUserInfo",updateUserInfo);
//            CardLayout layout=(CardLayout)userProcessContainer.getLayout();
//            layout.next(userProcessContainer);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a Customer to update.");
        }

//        int selectedRow = customerTable.getSelectedRow();
//        if(selectedRow >= 0) {
//            Customer c = (Customer) customerTable.getValueAt(selectedRow, 0);
//            System.out.println(c.getUsername());
//            UpdateInformationJPanel updateUserInfo = new UpdateInformationJPanel(userProcessContainer, this.system, "Customer", c.getUsername());
//            userProcessContainer.add("updateUserInfo",updateUserInfo);
//
//           CardLayout layout=(CardLayout)userProcessContainer.getLayout();
//           layout.next(userProcessContainer);
//        }
//        else
//        {
//            JOptionPane.showMessageDialog(null, "Please select a customer to update.");
//        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        int selectedRow = customerTable.getSelectedRow();
        if (selectedRow<0){
            JOptionPane.showMessageDialog(this, "Select a row to edit customer details");
            return;
        }
       
        DefaultTableModel model = (DefaultTableModel)customerTable.getModel();
        Customer selectedCustomer = (Customer)model.getValueAt(selectedRow, 1);
        nameTextField.setText(selectedCustomer.getName());
        usernameTextField.setText(selectedCustomer.getCustomerUsername());
        for(UserAccount ua: system.getUserAccountDirectory().getUserAccountList())
            {
                if(ua.getUsername().equals(selectedCustomer.getCustomerUsername()))
                {
                    UserAccount userAccount = ua;
                    passwordTextField.setText(userAccount.getPassword());
                }
            }
    }//GEN-LAST:event_btneditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnedit;
    private javax.swing.JTable customerTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton submitJButton;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

   
}
